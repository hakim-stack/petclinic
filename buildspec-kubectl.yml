version: 0.2

env:
  variables:
    CLUSTER_NAME: "petclinic-eks"
    REGION: "eu-west-3"

phases:
  install:
    commands:
      - echo "🔧 Installation de kubectl"
      - curl -o kubectl https://s3.us-west-2.amazonaws.com/amazon-eks/1.27.16/2024-09-11/bin/linux/amd64/kubectl
      - chmod +x kubectl && mv kubectl /usr/local/bin/kubectl
      - echo "✅ kubectl installé"

  pre_build:
    commands:
      - echo "📡 Connexion au cluster"
      - aws eks update-kubeconfig --region $REGION --name $CLUSTER_NAME

      - echo "🔐 Vérification des accès kubectl"
      - kubectl get nodes || { echo "❌ Échec de l'accès au cluster EKS. Vérifiez les permissions IAM."; exit 1; }

  build:
    commands:
      - echo "🚀 Création du namespace si besoin"
      - kubectl create namespace petclinic || echo "Namespace petclinic existe déjà"

      - echo "📥 Déploiement du contrôleur Ingress NGINX si absent"
      - |
        if ! kubectl get ns ingress-nginx >/dev/null 2>&1; then
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.9.5/deploy/static/provider/aws/deploy.yaml
          echo "⏳ Attente que le contrôleur soit prêt (rollout)..."
          kubectl rollout status deployment ingress-nginx-controller -n ingress-nginx --timeout=600s || echo "⚠️ Déploiement Ingress NGINX long ou déjà prêt"
        else
          echo "✅ Contrôleur Ingress NGINX déjà présent"
        fi

      # --- ATTENTE WEBHOOK ADMISSION AVANT LES INGRESSES ---
      - |
        echo "⏳ Attente que le webhook d'admission soit prêt..."
        for i in {1..30}; do
          READY=$(kubectl get endpoints -n ingress-nginx ingress-nginx-controller-admission -o jsonpath='{.subsets[*].addresses[*].ip}')
          if [ -n "$READY" ]; then
            echo "✅ Webhook d'admission prêt !"
            break
          fi
          echo "⏳ En attente... ($i/30)"
          sleep 10
        done

      - echo "📥 Installation de cert-manager"
      - kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.14.3/cert-manager.yaml
      - echo "⏳ Attente des pods cert-manager..."
      - kubectl wait --namespace cert-manager --for=condition=Available deployment/cert-manager --timeout=120s || true

      - echo "🔐 Déploiement du ClusterIssuer et du Certificate"
      - kubectl apply -f k8s-manifests/cluster-issuer.yaml
      - kubectl apply -f k8s-manifests/certificate.yaml

      - echo "🚀 Déploiement des ressources Kubernetes (manifests généraux)"
      - kubectl apply -f k8s-manifests/ -n petclinic

      - echo "🌐 Vérification de l'Ingress"
      - kubectl get ingress -n petclinic

      - echo "📡 Adresse IP publique de l'Ingress :"
      - kubectl get svc ingress-nginx-controller -n ingress-nginx -o jsonpath='{.status.loadBalancer.ingress[0].hostname}' || echo "⚠️ LoadBalancer pas encore prêt"

artifacts:
  files:
    - '**/*'
