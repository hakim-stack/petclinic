version: '3'

services:
  config-server:
    build:
      context: ./spring-petclinic-config-server
      dockerfile: Dockerfile
    container_name: config-server
    deploy:
      resources:
        limits:
          memory: 512M
    ports:
     - 8888:8888
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888"]
      interval: 10s
      timeout: 5s
      retries: 5

  discovery-server:
    build:
      context: ./spring-petclinic-discovery-server
      dockerfile: Dockerfile
    container_name: discovery-server
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
      - config-server
    ports:
     - 8761:8761
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761"]
      interval: 10s
      timeout: 5s
      retries: 5

  customers-service:
    build:
      context: ./spring-petclinic-customers-service
      dockerfile: Dockerfile
    container_name: customers-service
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
      - config-server
      - discovery-server
    ports:
    - 8081:8081

  visits-service:
    build:
      context: ./spring-petclinic-visits-service
      dockerfile: Dockerfile
    container_name: visits-service
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
      - config-server
      - discovery-server
    ports:
     - 8082:8082

  vets-service:
    build:
      context: ./spring-petclinic-vets-service
      dockerfile: Dockerfile
    container_name: vets-service
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
      - config-server
      - discovery-server
    ports:
     - 8083:8083

  api-gateway:
    build:
      context: ./spring-petclinic-api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
     - config-server
     - discovery-server
     - customers-service
     - vets-service
     - visits-service
    ports:
     - 8080:8080



